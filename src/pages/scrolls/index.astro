---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SITE_TITLE } from '../../consts';
import { getCollection } from 'astro:content';
import Search from "astro-pagefind/components/Search";

const scrolls = (await getCollection('scrolls')).sort();

---
<!-- <Debug {plainText} /> -->

<BaseLayout title="Database">
    <div class="archive-page page">
        <div class="search-page">
            <h1>Medieval Scrolls Database</h1>
            <div id="search"></div>
        </div>
    </div>
</BaseLayout>
<link href="/pagefind/pagefind-ui.css" rel="stylesheet">
<script src="/pagefind/pagefind-ui.js" is:inline></script>
<script type="module">
    document.body.classList.add("archive-search", "grid", "primary");
    window.addEventListener('DOMContentLoaded', (event) => {
        new PagefindUI({
            element: "#search",
            pageSize: 25,
            showImages: false,
            showEmptyFilters: false,
            // resetStyles: false
        });

        // pageFind resetStyles looks weird; we can't style a result directly without it;
        // we can't apply styles directly because the elements don't exist until the search is run.
        // Instead we'll use a MutationObserver to apply styles to the results after they're created.
        // Create a new MutationObserver instance
        var observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes.length) {
                    mutation.addedNodes.forEach(function(node) {
                        // Check if the added node has the class 'pagefind-ui__result'
                        if (node.classList && node.classList.contains('pagefind-ui__result')) {
                            node.style.overflowWrap = 'anywhere';
                        }
                    });
                }
            });
        });

        // Configuration of the observer:
        var config = { childList: true, subtree: true };

        // Start observing the body for added nodes
        observer.observe(document.body, config);

    });
</script>

<style>
    .search-page {
        min-height: 500px;
        padding: 100px;
    }
    #search {
        margin-top: 60px;
    }
</style>